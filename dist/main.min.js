(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require=="function"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error("Cannot find module '"+o+"'");throw f.code="MODULE_NOT_FOUND",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require=="function"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({"./src/js/main.js":[function(require,module,exports){
'use strict';

var game = new Phaser.Game(480, 640, Phaser.AUTO, 'planet-mocha-game');

window.Utils = require('./utils');
window.playerState = {
    currentLevel: 'Game'
}

game.state.add('Boot', require('./states/boot'));
game.state.add('Splash', require('./states/splash'));
game.state.add('Preloader', require('./states/preloader'));
// game.state.add('Menu', require('./states/menu'));
game.state.add('Game', require('./states/game'));

game.state.start('Boot');

},{"./states/boot":"/Users/joaojusto/Projectos/planet_mocha/src/js/states/boot.js","./states/game":"/Users/joaojusto/Projectos/planet_mocha/src/js/states/game.js","./states/preloader":"/Users/joaojusto/Projectos/planet_mocha/src/js/states/preloader.js","./states/splash":"/Users/joaojusto/Projectos/planet_mocha/src/js/states/splash.js","./utils":"/Users/joaojusto/Projectos/planet_mocha/src/js/utils.js"}],"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/cannon.js":[function(require,module,exports){
var Cannon = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'cannon');

    this.anchor.setTo(0.5, 1.2);
    this.scale.set(0.25, 0.25);
    this.radious = this.width * 0.5;

    game.add.existing(this);
};

Cannon.prototype = Object.create(Phaser.Sprite.prototype);
Cannon.prototype.constructor = Cannon;

Cannon.prototype.update = function() {

};

module.exports = Cannon;

},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/earth.js":[function(require,module,exports){
var Earth = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'earth');

    this.anchor.setTo(0.5, 0.5);
    this.scale.set(0.6, 0.6);
    this.radious = (this.width * 0.5) * 0.95;

    game.add.existing(this);
};

Earth.prototype = Object.create(Phaser.Sprite.prototype);
Earth.prototype.constructor = Earth;

Earth.prototype.update = function() {

};

module.exports = Earth;

},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/line.js":[function(require,module,exports){
var Line = function (context, game, x, y, target, cannon) {
  this.target = target;
  this.cannon = cannon;

  this.lineProperties = context.add.bitmapData(game.width, game.height);
  this.lineProperties.ctx.beginPath();
  this.lineProperties.ctx.lineWidth = '2';
  this.lineProperties.ctx.setLineDash([2, 15]);
  this.lineProperties.ctx.strokeStyle = 'rgba(255, 255, 255, 0.5)';
  this.lineProperties.ctx.stroke();

  Phaser.Sprite.call(this, game, x, y, this.lineProperties);

  game.add.existing(this);
};

Line.prototype = Object.create(Phaser.Sprite.prototype);
Line.prototype.constructor = Line;

Line.prototype.update = function() {
  this.lineProperties.clear();
  this.lineProperties.ctx.beginPath();
  this.lineProperties.ctx.moveTo(this.cannon.x, this.cannon.y);
  this.lineProperties.ctx.lineTo(this.target.x, this.target.y);
  this.lineProperties.ctx.stroke();
  this.lineProperties.ctx.closePath();
  this.lineProperties.render();
};

module.exports = Line;

},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/planet_mocha.js":[function(require,module,exports){
var PlanetMocha = function (game, x, y) {
    Phaser.Sprite.call(this, game, x, y, 'mocha');

    this.anchor.setTo(0.5, 0.5);
    this.scale.set(0.2, 0.2);

    game.add.existing(this);
};

PlanetMocha.prototype = Object.create(Phaser.Sprite.prototype);
PlanetMocha.prototype.constructor = PlanetMocha;

PlanetMocha.prototype.update = function() {

};

module.exports = PlanetMocha;

},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/states/boot.js":[function(require,module,exports){
var Boot = function () {};

module.exports = Boot;

Boot.prototype = {

  preload: function () {
    this.load.image('preloader', 'assets/preloader.gif');
  },

  create: function () {
    this.game.input.maxPointers = 1;

    if (this.game.device.desktop) {
      this.game.stage.scale.pageAlignHorizontally = true;
    } else {
      this.game.scale.scaleMode = Phaser.ScaleManager.SHOW_ALL;
      this.game.scale.minWidth =  480;
      this.game.scale.minHeight = 260;
      this.game.scale.maxWidth = 640;
      this.game.scale.maxHeight = 480;
      this.game.scale.forceLandscape = true;
      this.game.scale.pageAlignHorizontally = true;
      this.game.scale.setScreenSize(true);
    }

    this.game.state.start('Preloader');
  }
};

},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/states/game.js":[function(require,module,exports){
var Earth = require('../entities/earth');
var Line = require('../entities/line');
var Earth = require('../entities/earth');
var Cannon = require('../entities/cannon');
var PlanetMocha = require('../entities/planet_mocha');

var Game = function () {
};

module.exports = Game;

Game.prototype = {

  create: function () {
    var width = this.game.width;
    var height = this .game.height;

    this.target = { x: width * 0.5, y: 0 - height * 0.1 };

    this.background = this.add.sprite(0, 0, 'background');
    this.background.scale.set(0.5, 0.5);

    this.earth = new Earth(this.game, width / 2, 0 - height * 0.25);
    this.mochaPlanet = new PlanetMocha(this.game, width * 0.5, height);
    this.cannon = new Cannon(this.game, width * 0.5, height - this.mochaPlanet.height * 0.45);

    this.line = new Line(this, this.game, 0, 0, this.target, this.cannon);

    this.cursors = this.game.input.keyboard.createCursorKeys();
  },

  update: function () {

  }
};

},{"../entities/cannon":"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/cannon.js","../entities/earth":"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/earth.js","../entities/line":"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/line.js","../entities/planet_mocha":"/Users/joaojusto/Projectos/planet_mocha/src/js/entities/planet_mocha.js"}],"/Users/joaojusto/Projectos/planet_mocha/src/js/states/preloader.js":[function(require,module,exports){
var Preloader = function (game) {
  this.asset = null;
  this.ready = false;
};

module.exports = Preloader;

Preloader.prototype = {

  preload: function () {
    this.asset = this.add.sprite(320, 240, 'preloader');
    this.asset.anchor.setTo(0.5, 0.5);

    this.load.onLoadComplete.addOnce(this.onLoadComplete, this);
    this.load.setPreloadSprite(this.asset);

    this.loadResources();
  },

  loadResources: function() {
    this.load.image('player', 'assets/player.png');
    this.load.bitmapFont('minecraftia', 'assets/minecraftia.png', 'assets/minecraftia.xml');

    this.load.image('pum'          , 'assets/pum.png');
    this.load.image('meteor'       , 'assets/pum.png');
    this.load.image('earth'        , 'assets/earth.png');
    this.load.image('mocha'        , 'assets/mocha.png');
    this.load.image('coffee'       , 'assets/coffee.png');
    this.load.image('cannon'       , 'assets/cannon.png');
    this.load.image('pinpoint'     , 'assets/location.png');
    this.load.image('background'   , 'assets/background.png');
    this.load.spritesheet('flames' , 'assets/flames.png', 36, 62, 3);

    this.loadSounds([
      'hit',
      'miss',
      'fire',
      'earth_hit',
      'meteor_hit',
      'soundtrack'
    ]);
  },

  loadSounds: function(sounds){
    sounds.forEach(function(sound){
      this.load.audio(sound, 'assets/audio/'+ sound +'.mp3');
    }, this);
  },

  create: function () {
    this.asset.cropEnabled = false;
  },

  update: function () {
    if (!!this.ready) {
      this.game.state.start('Game');
    }
  },

  onLoadComplete: function () {
    this.ready = true;
  }
};

},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/states/splash.js":[function(require,module,exports){
var Splash = function () {
};

module.exports = Splash;

Splash.prototype = {
  create: function () {
  }
};
},{}],"/Users/joaojusto/Projectos/planet_mocha/src/js/utils.js":[function(require,module,exports){
var Utils = {
    containsObject: function(obj, list) {
        var i;
        for (i = 0; i < list.length; i++) {
            if (list[i] === obj) {
                return true;
            }
        }

        return false;
    }
};

module.exports = Utils;
},{}]},{},["./src/js/main.js"])
//# sourceMappingURL=data:application/json;charset:utf-8;base64,
